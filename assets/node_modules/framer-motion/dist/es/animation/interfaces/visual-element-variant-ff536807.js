import{resolveVariant as l}from"../../render/utils/resolve-dynamic-variants-52061d25.js";import{animateTarget as h}from"./visual-element-target-d083da2c.js";function g(r,e,n={}){const i=l(r,e,n.custom);let{transition:a=r.getDefaultTransition()||{}}=i||{};n.transitionOverride&&(a=n.transitionOverride);const s=i?()=>Promise.all(h(r,i,n)):()=>Promise.resolve(),o=r.variantChildren&&r.variantChildren.size?(m=0)=>{const{delayChildren:t=0,staggerChildren:c,staggerDirection:d}=a;return C(r,e,t+m,c,d,n)}:()=>Promise.resolve(),{when:f}=a;if(f){const[m,t]=f==="beforeChildren"?[s,o]:[o,s];return m().then(()=>t())}else return Promise.all([s(),o(n.delay)])}function C(r,e,n=0,i=0,a=1,s){const o=[],f=(r.variantChildren.size-1)*i,m=a===1?(t=0)=>t*i:(t=0)=>f-t*i;return Array.from(r.variantChildren).sort(u).forEach((t,c)=>{t.notify("AnimationStart",e),o.push(g(t,e,{...s,delay:n+m(c)}).then(()=>t.notify("AnimationComplete",e)))}),Promise.all(o)}function u(r,e){return r.sortNodePosition(e)}export{g as animateVariant,u as sortByTreeOrder};
