import{frame as c,cancelFrame as f}from"../frameloop/index-0bf9a1a0.js";import{createBox as b}from"../projection/geometry/models-d3b29ba1.js";import{isRefObject as S}from"../utils/is-ref-object-d2e619ec.js";import{initPrefersReducedMotion as P}from"../utils/reduced-motion/index-52fa5e58.js";import{hasReducedMotionListener as T,prefersReducedMotion as F}from"../utils/reduced-motion/state-048efa2b.js";import{SubscriptionManager as j}from"../utils/subscription-manager-6d1b8ede.js";import{motionValue as y}from"../value/index-2571ad88.js";import{isWillChangeMotionValue as R}from"../value/use-will-change/is-00f55687.js";import{isMotionValue as m}from"../value/utils/is-motion-value-3b0729b7.js";import{transformProps as x}from"./html/utils/transform-f683e7d2.js";import{isControllingVariants as w,isVariantNode as N}from"./utils/is-controlling-variants-0be66cfb.js";import{isVariantLabel as E}from"./utils/is-variant-label-3dc31dfe.js";import{updateMotionValuesFromProps as B}from"./utils/motion-values-b66128a7.js";import{resolveVariantFromProps as L}from"./utils/resolve-variants-0a9155e4.js";import{featureDefinitions as g}from"../motion/features/definitions-00767d69.js";import{variantProps as C}from"./utils/variant-props-b2020e8b.js";import{visualElementStore as V}from"./store-68d4b2c8.js";const M=Object.keys(g),I=M.length,v=["AnimationStart","AnimationComplete","Update","BeforeLayoutMeasure","LayoutMeasure","LayoutAnimationStart","LayoutAnimationComplete"],A=C.length;class et{constructor({parent:t,props:e,presenceContext:i,reducedMotionConfig:s,visualState:r},h={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify("Update",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.scheduleRender=()=>c.render(this.render,!1,!0);const{latestValues:a,renderState:u}=r;this.latestValues=a,this.baseTarget={...a},this.initialValues=e.initial?{...a}:{},this.renderState=u,this.parent=t,this.props=e,this.presenceContext=i,this.depth=t?t.depth+1:0,this.reducedMotionConfig=s,this.options=h,this.isControllingVariants=w(e),this.isVariantNode=N(e),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=!!(t&&t.current);const{willChange:n,...p}=this.scrapeMotionValuesFromProps(e,{});for(const o in p){const l=p[o];a[o]!==void 0&&m(l)&&(l.set(a[o],!1),R(n)&&n.add(o))}}scrapeMotionValuesFromProps(t,e){return{}}mount(t){this.current=t,V.set(t,this),this.projection&&!this.projection.instance&&this.projection.mount(t),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach((e,i)=>this.bindToMotionValue(i,e)),T.current||P(),this.shouldReduceMotion=this.reducedMotionConfig==="never"?!1:this.reducedMotionConfig==="always"?!0:F.current,this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){V.delete(this.current),this.projection&&this.projection.unmount(),f(this.notifyUpdate),f(this.render),this.valueSubscriptions.forEach(t=>t()),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const t in this.events)this.events[t].clear();for(const t in this.features)this.features[t].unmount();this.current=null}bindToMotionValue(t,e){const i=x.has(t),s=e.on("change",h=>{this.latestValues[t]=h,this.props.onUpdate&&c.update(this.notifyUpdate,!1,!0),i&&this.projection&&(this.projection.isTransformDirty=!0)}),r=e.on("renderRequest",this.scheduleRender);this.valueSubscriptions.set(t,()=>{s(),r()})}sortNodePosition(t){return!this.current||!this.sortInstanceNodePosition||this.type!==t.type?0:this.sortInstanceNodePosition(this.current,t.current)}loadFeatures({children:t,...e},i,s,r){let h,a;for(let u=0;u<I;u++){const n=M[u],{isEnabled:p,Feature:o,ProjectionNode:l,MeasureLayout:d}=g[n];l&&(h=l),p(e)&&(!this.features[n]&&o&&(this.features[n]=new o(this)),d&&(a=d))}if(!this.projection&&h){this.projection=new h(this.latestValues,this.parent&&this.parent.projection);const{layoutId:u,layout:n,drag:p,dragConstraints:o,layoutScroll:l,layoutRoot:d}=e;this.projection.setOptions({layoutId:u,layout:n,alwaysMeasureLayout:!!p||o&&S(o),visualElement:this,scheduleRender:()=>this.scheduleRender(),animationType:typeof n=="string"?n:"both",initialPromotionConfig:r,layoutScroll:l,layoutRoot:d})}return a}updateFeatures(){for(const t in this.features){const e=this.features[t];e.isMounted?e.update():(e.mount(),e.isMounted=!0)}}triggerBuild(){this.build(this.renderState,this.latestValues,this.options,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):b()}getStaticValue(t){return this.latestValues[t]}setStaticValue(t,e){this.latestValues[t]=e}makeTargetAnimatable(t,e=!0){return this.makeTargetAnimatableFromInstance(t,this.props,e)}update(t,e){(t.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=t,this.prevPresenceContext=this.presenceContext,this.presenceContext=e;for(let i=0;i<v.length;i++){const s=v[i];this.propEventSubscriptions[s]&&(this.propEventSubscriptions[s](),delete this.propEventSubscriptions[s]);const r=t["on"+s];r&&(this.propEventSubscriptions[s]=this.on(s,r))}this.prevMotionValues=B(this,this.scrapeMotionValuesFromProps(t,this.prevProps),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(t){return this.props.variants?this.props.variants[t]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}getVariantContext(t=!1){if(t)return this.parent?this.parent.getVariantContext():void 0;if(!this.isControllingVariants){const i=this.parent?this.parent.getVariantContext()||{}:{};return this.props.initial!==void 0&&(i.initial=this.props.initial),i}const e={};for(let i=0;i<A;i++){const s=C[i],r=this.props[s];(E(r)||r===!1)&&(e[s]=r)}return e}addVariantChild(t){const e=this.getClosestVariantNode();if(e)return e.variantChildren&&e.variantChildren.add(t),()=>e.variantChildren.delete(t)}addValue(t,e){e!==this.values.get(t)&&(this.removeValue(t),this.bindToMotionValue(t,e)),this.values.set(t,e),this.latestValues[t]=e.get()}removeValue(t){this.values.delete(t);const e=this.valueSubscriptions.get(t);e&&(e(),this.valueSubscriptions.delete(t)),delete this.latestValues[t],this.removeValueFromRenderState(t,this.renderState)}hasValue(t){return this.values.has(t)}getValue(t,e){if(this.props.values&&this.props.values[t])return this.props.values[t];let i=this.values.get(t);return i===void 0&&e!==void 0&&(i=y(e,{owner:this}),this.addValue(t,i)),i}readValue(t){return this.latestValues[t]!==void 0||!this.current?this.latestValues[t]:this.readValueFromInstance(this.current,t,this.options)}setBaseTarget(t,e){this.baseTarget[t]=e}getBaseTarget(t){var e;const{initial:i}=this.props,s=typeof i=="string"||typeof i=="object"?(e=L(this.props,i))===null||e===void 0?void 0:e[t]:void 0;if(i&&s!==void 0)return s;const r=this.getBaseTargetFromProps(this.props,t);return r!==void 0&&!m(r)?r:this.initialValues[t]!==void 0&&s===void 0?void 0:this.baseTarget[t]}on(t,e){return this.events[t]||(this.events[t]=new j),this.events[t].add(e)}notify(t,...e){this.events[t]&&this.events[t].notify(...e)}}export{et as VisualElement};
