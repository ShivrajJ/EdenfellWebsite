import{scrapeMotionValuesFromProps as s}from"./utils/scrape-motion-values-8518d8d3.js";import{DOMVisualElement as a}from"../dom/DOMVisualElement-f37af459.js";import{buildSVGAttrs as m}from"./utils/build-attrs-88b0089b.js";import{camelToDash as i}from"../dom/utils/camel-to-dash-ccdbbb17.js";import{camelCaseAttributes as u}from"./utils/camel-case-attrs-9c83bd07.js";import{transformProps as n}from"../html/utils/transform-f683e7d2.js";import{renderSVG as p}from"./utils/render-37db9c8a.js";import{getDefaultValueType as l}from"../dom/value-types/defaults-8eb84754.js";import{createBox as f}from"../../projection/geometry/models-d3b29ba1.js";import{isSVGTag as V}from"./utils/is-svg-tag-1f424378.js";class A extends a{constructor(){super(...arguments),this.isSVGTag=!1}getBaseTargetFromProps(t,r){return t[r]}readValueFromInstance(t,r){if(n.has(r)){const e=l(r);return e&&e.default||0}return r=u.has(r)?r:i(r),t.getAttribute(r)}measureInstanceViewportBox(){return f()}scrapeMotionValuesFromProps(t,r){return s(t,r)}build(t,r,e,o){m(t,r,e,this.isSVGTag,o.transformTemplate)}renderInstance(t,r,e,o){p(t,r,e,o)}mount(t){this.isSVGTag=V(t.tagName),super.mount(t)}}export{A as SVGVisualElement};
