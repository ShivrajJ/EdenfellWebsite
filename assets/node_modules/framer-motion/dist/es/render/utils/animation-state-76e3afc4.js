import{isAnimationControls as _}from"../../animation/utils/is-animation-controls-e6c2e069.js";import{isKeyframesTarget as R}from"../../animation/utils/is-keyframes-target-051035e7.js";import{shallowCompare as D}from"../../utils/shallow-compare-6efc8db2.js";import{isVariantLabel as z}from"./is-variant-label-3dc31dfe.js";import{resolveVariant as H}from"./resolve-dynamic-variants-52061d25.js";import{variantPriorityOrder as x}from"./variant-props-b2020e8b.js";import{animateVisualElement as j}from"../../animation/interfaces/visual-element-8356923c.js";const q=[...x].reverse(),G=x.length;function J(e){return s=>Promise.all(s.map(({animation:f,options:y})=>j(e,f,y)))}function ee(e){let s=J(e);const f=Q();let y=!0;const L=(i,c)=>{const l=H(e,c);if(l){const{transition:p,transitionEnd:u,...o}=l;i={...i,...o,...u}}return i};function B(i){s=i(e)}function C(i,c){const l=e.getProps(),p=e.getVariantContext(!0)||{},u=[],o=new Set;let d={},I=1/0;for(let m=0;m<G;m++){const r=q[m],t=f[r],a=l[r]!==void 0?l[r]:p[r],V=z(a),P=r===c?t.isActive:null;P===!1&&(I=m);let g=a===p[r]&&a!==l[r]&&V;if(g&&y&&e.manuallyAnimateOnMount&&(g=!1),t.protectedKeys={...d},!t.isActive&&P===null||!a&&!t.prevProp||_(a)||typeof a=="boolean")continue;const b=N(t.prevProp,a);let w=b||r===c&&t.isActive&&!g&&V||m>I&&V;const k=Array.isArray(a)?a:[a];let A=k.reduce(L,{});P===!1&&(A={});const{prevResolvedValues:O={}}=t,M={...O,...A},K=n=>{w=!0,o.delete(n),t.needsAnimating[n]=!0};for(const n in M){const h=A[n],T=O[n];d.hasOwnProperty(n)||(h!==T?R(h)&&R(T)?!D(h,T)||b?K(n):t.protectedKeys[n]=!0:h!==void 0?K(n):o.add(n):h!==void 0&&o.has(n)?K(n):t.protectedKeys[n]=!0)}t.prevProp=a,t.prevResolvedValues=A,t.isActive&&(d={...d,...A}),y&&e.blockInitialAnimation&&(w=!1),w&&!g&&u.push(...k.map(n=>({animation:n,options:{type:r,...i}})))}if(o.size){const m={};o.forEach(r=>{const t=e.getBaseTarget(r);t!==void 0&&(m[r]=t)}),u.push({animation:m})}let S=!!u.length;return y&&l.initial===!1&&!e.manuallyAnimateOnMount&&(S=!1),y=!1,S?s(u):Promise.resolve()}function F(i,c,l){var p;if(f[i].isActive===c)return Promise.resolve();(p=e.variantChildren)===null||p===void 0||p.forEach(o=>{var d;return(d=o.animationState)===null||d===void 0?void 0:d.setActive(i,c)}),f[i].isActive=c;const u=C(l,i);for(const o in f)f[o].protectedKeys={};return u}return{animateChanges:C,setActive:F,setAnimateFunction:B,getState:()=>f}}function N(e,s){return typeof s=="string"?s!==e:Array.isArray(s)?!D(s,e):!1}function v(e=!1){return{isActive:e,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function Q(){return{animate:v(!0),whileInView:v(),whileHover:v(),whileTap:v(),whileDrag:v(),whileFocus:v(),exit:v()}}export{N as checkVariantsDidChange,ee as createAnimationState};
