import{extractEventInfo as f}from"../events/event-info-ab2dff62.js";import{addDomEvent as p}from"../events/add-dom-event-ec836865.js";import{addPointerEvent as m}from"../events/add-pointer-event-2e752970.js";import{Feature as L}from"../motion/features/Feature-0951dc07.js";import{pipe as P}from"../utils/pipe-0a7cd078.js";import{isDragActive as E}from"./drag/utils/lock-a07836c2.js";import{isNodeOrChild as g}from"./utils/is-node-or-child-82d15743.js";import{noop as u}from"../utils/noop-cb6623c9.js";import{frame as d}from"../frameloop/index-0bf9a1a0.js";function v(l,e){if(!e)return;const s=new PointerEvent("pointer"+l);e(s,f(s))}class K extends L{constructor(){super(...arguments),this.removeStartListeners=u,this.removeEndListeners=u,this.removeAccessibleListeners=u,this.startPointerPress=(e,s)=>{if(this.removeEndListeners(),this.isPressing)return;const t=this.node.getProps(),i=m(window,"pointerup",(r,n)=>{if(!this.checkPressEnd())return;const{onTap:h,onTapCancel:c}=this.node.getProps();d.update(()=>{g(this.node.current,r.target)?h&&h(r,n):c&&c(r,n)})},{passive:!(t.onTap||t.onPointerUp)}),o=m(window,"pointercancel",(r,n)=>this.cancelPress(r,n),{passive:!(t.onTapCancel||t.onPointerCancel)});this.removeEndListeners=P(i,o),this.startPress(e,s)},this.startAccessiblePress=()=>{const e=i=>{if(i.key!=="Enter"||this.isPressing)return;const o=r=>{r.key!=="Enter"||!this.checkPressEnd()||v("up",(n,h)=>{const{onTap:c}=this.node.getProps();c&&d.update(()=>c(n,h))})};this.removeEndListeners(),this.removeEndListeners=p(this.node.current,"keyup",o),v("down",(r,n)=>{this.startPress(r,n)})},s=p(this.node.current,"keydown",e),t=()=>{this.isPressing&&v("cancel",(i,o)=>this.cancelPress(i,o))},a=p(this.node.current,"blur",t);this.removeAccessibleListeners=P(s,a)}}startPress(e,s){this.isPressing=!0;const{onTapStart:t,whileTap:a}=this.node.getProps();a&&this.node.animationState&&this.node.animationState.setActive("whileTap",!0),t&&d.update(()=>t(e,s))}checkPressEnd(){return this.removeEndListeners(),this.isPressing=!1,this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive("whileTap",!1),!E()}cancelPress(e,s){if(!this.checkPressEnd())return;const{onTapCancel:t}=this.node.getProps();t&&d.update(()=>t(e,s))}mount(){const e=this.node.getProps(),s=m(this.node.current,"pointerdown",this.startPointerPress,{passive:!(e.onTapStart||e.onPointerStart)}),t=p(this.node.current,"focus",this.startAccessiblePress);this.removeStartListeners=P(s,t)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}export{K as PressGesture};
