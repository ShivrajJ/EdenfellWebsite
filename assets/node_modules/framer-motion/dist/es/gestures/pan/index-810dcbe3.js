import{PanSession as d}from"./PanSession-43d9e51a.js";import{addPointerEvent as m}from"../../events/add-pointer-event-2e752970.js";import{Feature as h}from"../../motion/features/Feature-0951dc07.js";import{noop as p}from"../../utils/noop-cb6623c9.js";import{frame as r}from"../../frameloop/index-0bf9a1a0.js";const s=e=>(n,t)=>{e&&r.update(()=>e(n,t))};class l extends h{constructor(){super(...arguments),this.removePointerDownListener=p}onPointerDown(n){this.session=new d(n,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint()})}createPanHandlers(){const{onPanSessionStart:n,onPanStart:t,onPan:i,onPanEnd:o}=this.node.getProps();return{onSessionStart:s(n),onStart:s(t),onMove:i,onEnd:(a,P)=>{delete this.session,o&&r.update(()=>o(a,P))}}}mount(){this.removePointerDownListener=m(this.node.current,"pointerdown",n=>this.onPointerDown(n))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}export{l as PanGesture};
