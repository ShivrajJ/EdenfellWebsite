import{invariant as g}from"./errors-1c110e5d.js";import{color as y}from"../value/types/color/index-092d9399.js";import{clamp as p}from"./clamp-eab0e97e.js";import{mix as h}from"./mix-d6f4c5c1.js";import{mixColor as b}from"./mix-color-9a23e556.js";import{mixComplex as A,mixArray as M,mixObject as F}from"./mix-complex-a7252cd9.js";import{pipe as j}from"./pipe-0a7cd078.js";import{progress as C}from"./progress-cd14f27a.js";import{noop as d}from"./noop-cb6623c9.js";const x=(r,e)=>n=>h(r,e,n);function k(r){return typeof r=="number"?x:typeof r=="string"?y.test(r)?b:A:Array.isArray(r)?M:typeof r=="object"?F:x}function I(r,e,n){const s=[],l=n||k(r[0]),i=r.length-1;for(let o=0;o<i;o++){let m=l(r[o],r[o+1]);if(e){const f=Array.isArray(e)?e[o]||d:e;m=j(f,m)}s.push(m)}return s}function E(r,e,{clamp:n=!0,ease:s,mixer:l}={}){const i=r.length;if(g(i===e.length),i===1)return()=>e[0];r[0]>r[i-1]&&(r=[...r].reverse(),e=[...e].reverse());const o=I(e,s,l),m=o.length,f=c=>{let t=0;if(m>1)for(;t<r.length-2&&!(c<r[t+1]);t++);const a=C(r[t],r[t+1],c);return o[t](a)};return n?c=>f(p(r[0],r[i-1],c)):f}export{E as interpolate};
