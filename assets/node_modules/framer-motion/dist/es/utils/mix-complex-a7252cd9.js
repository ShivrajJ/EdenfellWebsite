import{mix as a}from"./mix-d6f4c5c1.js";import{mixColor as p}from"./mix-color-9a23e556.js";import{pipe as f}from"./pipe-0a7cd078.js";import{color as x}from"../value/types/color/index-092d9399.js";import{complex as i,analyseComplexValue as u}from"../value/types/complex/index-d3a0bdae.js";const l=(e,t)=>o=>`${o>0?t:e}`;function c(e,t){return typeof e=="number"?o=>a(e,t,o):x.test(e)?p(e,t):e.startsWith("var(")?l(e,t):b(e,t)}const d=(e,t)=>{const o=[...e],r=o.length,n=e.map((s,m)=>c(s,t[m]));return s=>{for(let m=0;m<r;m++)o[m]=n[m](s);return o}},h=(e,t)=>{const o={...e,...t},r={};for(const n in o)e[n]!==void 0&&t[n]!==void 0&&(r[n]=c(e[n],t[n]));return n=>{for(const s in r)o[s]=r[s](n);return o}},b=(e,t)=>{const o=i.createTransformer(t),r=u(e),n=u(t);return r.numVars===n.numVars&&r.numColors===n.numColors&&r.numNumbers>=n.numNumbers?f(d(r.values,n.values),o):l(e,t)};export{d as mixArray,b as mixComplex,h as mixObject};
